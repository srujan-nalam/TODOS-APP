{"version":3,"sources":["components/form.js","components/todo.js","components/TodoList.js","App.js","reportWebVitals.js","index.js"],"names":["Form","setInputText","todos","setTodos","inputText","setStatus","value","onChange","e","target","type","className","onClick","preventDefault","text","completed","id","Math","random","name","Todo","todo","map","item","filter","el","Todolist","filteredTodos","App","useState","status","setFilteredTodos","useEffect","getLocaltodos","filterHandler","saveLocalTodos","localStorage","setItem","JSON","stringify","getItem","todoLocal","parse","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0d02f222.chunk.js","sourcesContent":["import React from 'react';\r\n\r\n\r\nexport const Form = ({setInputText, todos, setTodos, inputText, setStatus}) => {\r\n    const inputTextHandler = (e) => {\r\n        setInputText(e.target.value);\r\n    }\r\n\r\n    const submitTodoHandler = (e) => {\r\n        e.preventDefault();\r\n        setTodos([\r\n            ...todos, {text: inputText, completed: false, id: Math.random()*1000}\r\n        ])\r\n        setInputText('');\r\n    };\r\n\r\n    const statusHandler = (e) => {\r\n        setStatus(e.target.value);\r\n    }\r\n\r\n    return(\r\n        <form>\r\n        <><input value={inputText} onChange={inputTextHandler} type=\"text\" className=\"todo-input\" /><button onClick={submitTodoHandler} className=\"todo-button\" type=\"submit\">\r\n            <i className=\"fas fa-plus-square\"></i>\r\n        </button  ><div className=\"select\">\r\n                <select onChange ={statusHandler} name=\"todos\" className=\"filter-todo\">\r\n                    <option value=\"all\">All</option>\r\n                    <option value=\"completed\">Completed</option>\r\n                    <option value=\"uncompleted\">Uncompleted</option>\r\n                </select>\r\n            </div></>\r\n        </form>\r\n    );\r\n};","import React from \"react\";\r\n\r\nexport const Todo = ({text ,todo,todos, setTodos}) => {\r\n    const deleteHandler = () => {\r\n        setTodos(todos.filter((el) => el.id !== todo.id));\r\n    };\r\n\r\n    const completeHandler = () => {\r\n        setTodos(todos.map(item => {\r\n            if(item.id === todo.id){\r\n                return{\r\n                    ...item, completed: !item.completed\r\n                }\r\n            }\r\n            return item;\r\n        }))\r\n    };\r\n\r\n    return (\r\n        <div className='todo'>\r\n            <li className={`todo-item ${todo.completed? \"completed\":\"\"}`}>{text}</li>\r\n            <button onClick={completeHandler} className='complete-btn'>\r\n                <i className='fas fa-check'></i>\r\n            </button>\r\n            <button onClick={deleteHandler} className='trash-btn'>\r\n                <i className='fas fa-trash'></i>\r\n            </button>\r\n        </div>\r\n    );\r\n}","import React from \"react\";\r\nimport { Todo } from \"./todo\";\r\n\r\nexport const Todolist = ({todos, setTodos, filteredTodos}) => {\r\n    return(\r\n        <div className=\"todo-container\">\r\n             <ul className=\"todo-list\">\r\n                {\r\n                    filteredTodos.map((todo)=> (\r\n                        <Todo todo ={todo} todos = {todos} setTodos = {setTodos} key={todo.id} text ={todo.text} />\r\n                    ))\r\n                }   \r\n             </ul>\r\n        </div>\r\n    );\r\n};\r\n\r\n","import './App.css';\nimport { useState, useEffect } from \"react\";\nimport { Form } from './components/form';\nimport { Todolist } from './components/TodoList';\n\nfunction App() {\n  const [inputText, setInputText] = useState('');\n  const [todos, setTodos] = useState([]);\n  const [status, setStatus] = useState('all');\n  const [filteredTodos, setFilteredTodos] = useState([]);\n\n\n  // useEffect\n  useEffect(() => {\n    getLocaltodos();\n  },[])\n\n  useEffect(() => {\n    filterHandler();\n    saveLocalTodos();\n  },[todos, status]);\n\n  //functions\n  const filterHandler = () => {\n    switch(status){\n      case \"completed\":\n        setFilteredTodos(todos.filter(todo => todo.completed === true));\n        break;\n      case \"uncompleted\":\n        setFilteredTodos(todos.filter(todo => todo.completed === false));  \n        break;\n      default:\n        setFilteredTodos(todos);  \n        break;\n    }\n  };\n// local storage\n  const saveLocalTodos = () => {\n    localStorage.setItem('todos', JSON.stringify(todos));\n  }\n\n  const getLocaltodos = () => {\n    if (localStorage.getItem(\"todos\") === null){\n      localStorage.setItem(\"todos\", JSON.stringify(todos));\n    }else {\n      let todoLocal = JSON.parse(localStorage.getItem(\"todos\"));\n      setTodos(todoLocal);\n    }\n  }\n  return (\n    <div className=\"App\">\n      <header>\n        <h1>Srujan's Todo List</h1>\n      </header>\n      <Form  inputText={inputText} todos={todos} setTodos = {setTodos} setInputText = {setInputText} setStatus={setStatus}/>\n      <Todolist filteredTodos={filteredTodos} todos = {todos} setTodos = {setTodos}/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}